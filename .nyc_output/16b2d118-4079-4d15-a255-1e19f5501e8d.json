{"/Users/mirekrousal/flick/brokers-test/src/controllers/broker-one-ingest.ts":{"path":"/Users/mirekrousal/flick/brokers-test/src/controllers/broker-one-ingest.ts","statementMap":{"0":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":28}},"2":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"3":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"4":{"start":{"line":4,"column":79},"end":{"line":4,"column":131}},"5":{"start":{"line":5,"column":9},"end":{"line":5,"column":150}},"6":{"start":{"line":5,"column":22},"end":{"line":5,"column":43}},"7":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"8":{"start":{"line":5,"column":81},"end":{"line":5,"column":150}},"9":{"start":{"line":6,"column":4},"end":{"line":6,"column":66}},"10":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"11":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"12":{"start":{"line":9,"column":79},"end":{"line":9,"column":109}},"13":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"14":{"start":{"line":12,"column":0},"end":{"line":12,"column":66}},"15":{"start":{"line":13,"column":15},"end":{"line":13,"column":30}},"16":{"start":{"line":14,"column":21},"end":{"line":14,"column":51}},"17":{"start":{"line":15,"column":31},"end":{"line":15,"column":70}},"18":{"start":{"line":16,"column":27},"end":{"line":16,"column":62}},"19":{"start":{"line":17,"column":22},"end":{"line":17,"column":53}},"20":{"start":{"line":18,"column":17},"end":{"line":18,"column":43}},"21":{"start":{"line":19,"column":15},"end":{"line":19,"column":20}},"22":{"start":{"line":20,"column":32},"end":{"line":40,"column":1}},"23":{"start":{"line":24,"column":8},"end":{"line":29,"column":9}},"24":{"start":{"line":25,"column":12},"end":{"line":28,"column":14}},"25":{"start":{"line":30,"column":21},"end":{"line":30,"column":67}},"26":{"start":{"line":31,"column":8},"end":{"line":31,"column":30}},"27":{"start":{"line":32,"column":24},"end":{"line":32,"column":72}},"28":{"start":{"line":32,"column":48},"end":{"line":32,"column":71}},"29":{"start":{"line":33,"column":8},"end":{"line":33,"column":100}},"30":{"start":{"line":33,"column":94},"end":{"line":33,"column":97}},"31":{"start":{"line":34,"column":8},"end":{"line":34,"column":24}},"32":{"start":{"line":35,"column":8},"end":{"line":38,"column":10}},"33":{"start":{"line":41,"column":0},"end":{"line":46,"column":61}},"34":{"start":{"line":47,"column":0},"end":{"line":50,"column":30}},"35":{"start":{"line":53,"column":4},"end":{"line":76,"column":5}},"36":{"start":{"line":54,"column":8},"end":{"line":70,"column":10}},"37":{"start":{"line":73,"column":8},"end":{"line":73,"column":24}},"38":{"start":{"line":74,"column":8},"end":{"line":74,"column":87}},"39":{"start":{"line":75,"column":8},"end":{"line":75,"column":20}},"40":{"start":{"line":78,"column":0},"end":{"line":78,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":46},"end":{"line":2,"column":47}},"loc":{"start":{"line":2,"column":87},"end":{"line":7,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":46},"end":{"line":8,"column":47}},"loc":{"start":{"line":8,"column":62},"end":{"line":10,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":24},"end":{"line":39,"column":5}},"line":21},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":33},"end":{"line":32,"column":34}},"loc":{"start":{"line":32,"column":48},"end":{"line":32,"column":71}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":33,"column":85},"end":{"line":33,"column":86}},"loc":{"start":{"line":33,"column":94},"end":{"line":33,"column":97}},"line":33},"5":{"name":"normaliseRow","decl":{"start":{"line":51,"column":15},"end":{"line":51,"column":27}},"loc":{"start":{"line":51,"column":33},"end":{"line":77,"column":1}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":18},"end":{"line":2,"column":22}},{"start":{"line":2,"column":26},"end":{"line":2,"column":41}},{"start":{"line":2,"column":46},"end":{"line":7,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":42},"end":{"line":3,"column":48}},{"start":{"line":3,"column":51},"end":{"line":3,"column":125}}],"line":3},"2":{"loc":{"start":{"line":3,"column":51},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":67},"end":{"line":3,"column":118}},{"start":{"line":3,"column":121},"end":{"line":3,"column":125}}],"line":3},"3":{"loc":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},{"start":{"line":4,"column":4},"end":{"line":5,"column":150}}],"line":4},"4":{"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":77}},"type":"binary-expr","locations":[{"start":{"line":4,"column":8},"end":{"line":4,"column":35}},{"start":{"line":4,"column":39},"end":{"line":4,"column":77}}],"line":4},"5":{"loc":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},{"start":{"line":5,"column":58},"end":{"line":5,"column":150}}],"line":5},"6":{"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":149}},"type":"binary-expr","locations":[{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},{"start":{"line":5,"column":148},"end":{"line":5,"column":149}}],"line":5},"7":{"loc":{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":94},"end":{"line":5,"column":98}},{"start":{"line":5,"column":101},"end":{"line":5,"column":143}}],"line":5},"8":{"loc":{"start":{"line":5,"column":101},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":109},"end":{"line":5,"column":126}},{"start":{"line":5,"column":129},"end":{"line":5,"column":143}}],"line":5},"9":{"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":62}},"type":"binary-expr","locations":[{"start":{"line":6,"column":11},"end":{"line":6,"column":16}},{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":62}}],"line":6},"10":{"loc":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":8,"column":18},"end":{"line":8,"column":22}},{"start":{"line":8,"column":26},"end":{"line":8,"column":41}},{"start":{"line":8,"column":46},"end":{"line":10,"column":1}}],"line":8},"11":{"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},{"start":{"line":9,"column":4},"end":{"line":9,"column":109}}],"line":9},"12":{"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":77}},"type":"binary-expr","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":35}},{"start":{"line":9,"column":39},"end":{"line":9,"column":77}}],"line":9},"13":{"loc":{"start":{"line":24,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":29,"column":9}},{"start":{"line":24,"column":8},"end":{"line":29,"column":9}}],"line":24}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":0,"6":0,"7":0,"8":0,"9":2,"10":1,"11":3,"12":3,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":1,"35":2,"36":2,"37":1,"38":1,"39":1,"40":1},"f":{"0":2,"1":3,"2":0,"3":0,"4":0,"5":2},"b":{"0":[1,1,1],"1":[1,1],"2":[1,0],"3":[2,0],"4":[2,2],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[2,1,1],"10":[1,1,1],"11":[3,0],"12":[3,3],"13":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/mirekrousal/flick/brokers-test/src/controllers/broker-one-ingest.ts","sources":["/Users/mirekrousal/flick/brokers-test/src/controllers/broker-one-ingest.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,+BAAyC;AAGzC,oDAA8C;AAC9C,uEAA0E;AAC1E,+DAAkE;AAClE,sDAA0F;AAC1F,4CAAiD;AAEjD,IAAI,QAAQ,GAAY,KAAK,CAAC;AAIvB,IAAM,yBAAyB,uCAA/B,MAAM,yBAAyB;IAEvB,AAAN,KAAK,CAAC,WAAW;QACtB,yIAAyI;QACzI,gCAAgC;QAChC,IAAI,QAAQ,EAAE;YACZ,OAAO;gBACL,MAAM,EAAE,SAAS;gBACjB,OAAO,EAAE,sCAAsC;aAChD,CAAC;SACH;QAED,MAAM,IAAI,GAAG,MAAM,IAAA,oBAAO,EAAC,aAAa,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;QACtB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,MAAM,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;QAEjE,MAAM,2BAAkB,CAAC,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAEnF,QAAQ,GAAG,IAAI,CAAC;QAChB,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,gBAAgB;SAC1B,CAAC;IACJ,CAAC;CACF,CAAA;AAtBc;IADZ,IAAA,WAAI,EAAC,eAAe,CAAC;;;;4DAsBrB;oCAvBU,yBAAyB;IAFrC,IAAA,YAAK,EAAC,+BAA+B,CAAC;IACtC,IAAA,WAAI,EAAC,mBAAmB,CAAC;GACb,yBAAyB,CAwBrC;AAEM,KAAK,UAAU,YAAY,CAAC,GAAO;IACxC,+CAA+C;IAC/C,IAAI;QACF,OAAO;YACL,MAAM,EAAE,uBAAc;YACtB,MAAM,EAAE,GAAG,CAAC,cAAc,CAAC;YAC3B,MAAM,EAAE,IAAA,kCAAoB,EAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAClD,kBAAkB,EAAE,IAAA,uBAAS,EAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAC/C,gBAAgB,EAAE,IAAA,uBAAS,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YAC3C,QAAQ,EAAE,IAAA,kCAAoB,EAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC/C,aAAa,EAAE,IAAA,+BAAiB,EAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YACtD,MAAM,EAAE,GAAG,CAAC,qBAAqB,CAAC;YAClC,SAAS,EAAE,GAAG,CAAC,WAAW,CAAC;YAC3B,UAAU,EAAE,GAAG,CAAC,YAAY,CAAe;YAC3C,UAAU,EAAE,IAAA,kCAAoB,EAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACnD,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC;YACvB,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC;YAC7B,OAAO,EAAE,GAAG,CAAC,SAAS,CAAC;YACvB,UAAU,EAAE,GAAG;SAChB,CAAC;KACH;IAAC,OAAO,EAAE,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,MAAM,uBAAc,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,EAAE,uBAAc,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAzBD,oCAyBC","sourcesContent":["import { Post, Route, Tags } from \"tsoa\";\nimport { IngestStartResponse } from \"../types/ingest-types\";\nimport { BusinessEvent, InsuranceRecord, ClientType } from \"../types/normalised\";\nimport { readCsv } from \"../utils/csv-reader\";\nimport { repo as normalisedDataRepo } from \"../repo/normalised-data-repo\";\nimport { repo as failedDataRepo } from \"../repo/failed-data-repo\";\nimport { matchBusinessEven, parseDate, parseToNumberOrThrow } from \"../utils/parse-utils\";\nimport { BROKER1_SOURCE } from \"../utils/consts\";\n\nlet ingested: boolean = false;\n\n@Route(`/broker-api/broker-one-ingest`)\n@Tags(\"broker-one-ingest\")\nexport class BrokerOneIngestController {\n  @Post(\"/start-ingest\")\n  public async startIngest(): Promise<IngestStartResponse> {\n    // there should be logic to avoid duplicated processing or have properly defined rules what happens when we process file for second time.\n    // like if there differences etc\n    if (ingested) {\n      return {\n        status: \"Skipped\",\n        message: \"This file has already been processed\",\n      };\n    }\n\n    const data = await readCsv(\"broker1.csv\");\n    console.log({ data });\n    const records = data.map(async (row) => await normaliseRow(row));\n\n    await normalisedDataRepo.insert((await Promise.all(records)).filter((row) => row));\n\n    ingested = true;\n    return {\n      status: \"OK\",\n      message: \"Ingest started\",\n    };\n  }\n}\n\nexport async function normaliseRow(row: {}): Promise<InsuranceRecord> {\n  //TODO more granular validation would be needed\n  try {\n    return {\n      source: BROKER1_SOURCE,\n      policy: row[\"PolicyNumber\"],\n      amount: parseToNumberOrThrow(row[\"InsuredAmount\"]),\n      startDateTimestamp: parseDate(row[\"StartDate\"]),\n      endDateTimestamp: parseDate(row[\"EndDate\"]),\n      adminFee: parseToNumberOrThrow(row[\"AdminFee\"]),\n      businessEvent: matchBusinessEven(row[\"BusinessEvent\"]),\n      client: row[\"BusinessDescription\"],\n      clientRef: row[\"ClientRef\"],\n      clientType: row[\"ClientType\"] as ClientType,\n      commission: parseToNumberOrThrow(row[\"Commission\"]),\n      insurer: row[\"Insurer\"],\n      policyType: row[\"PolicyType\"],\n      product: row[\"Product\"],\n      sourceData: row,\n    };\n  } catch (ex) {\n    console.log(ex);\n    await failedDataRepo.insert(row, ex.message, BROKER1_SOURCE);\n    return null;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bdb9e900040ee8df9d2aaa7488b856555d8bd85b","contentHash":"bfcf85bfb637284e77b46235d715b9fd8ece0531100a884282405908ee1be733"},"/Users/mirekrousal/flick/brokers-test/src/utils/csv-reader.ts":{"path":"/Users/mirekrousal/flick/brokers-test/src/utils/csv-reader.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":58}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":40}},"7":{"start":{"line":11,"column":22},"end":{"line":11,"column":78}},"8":{"start":{"line":12,"column":21},"end":{"line":12,"column":65}},"9":{"start":{"line":13,"column":20},"end":{"line":17,"column":6}},"10":{"start":{"line":14,"column":8},"end":{"line":16,"column":11}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":26}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":19}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"readCsv","decl":{"start":{"line":10,"column":15},"end":{"line":10,"column":22}},"loc":{"start":{"line":10,"column":29},"end":{"line":19,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":32},"end":{"line":13,"column":33}},"loc":{"start":{"line":13,"column":45},"end":{"line":17,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":72},"end":{"line":14,"column":73}},"loc":{"start":{"line":14,"column":93},"end":{"line":16,"column":9}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"f":{"0":2,"1":0,"2":0,"3":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/Users/mirekrousal/flick/brokers-test/src/utils/csv-reader.ts","sources":["/Users/mirekrousal/flick/brokers-test/src/utils/csv-reader.ts"],"names":[],"mappings":";;;;;;AAAA,2DAA6B;AAC7B,gDAAwB;AACxB,yCAAkC;AAE3B,KAAK,UAAU,OAAO,CAAC,IAAY;IACxC,MAAM,SAAS,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAEjE,MAAM,QAAQ,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAE9C,MAAM,OAAO,GAAG,IAAI,OAAO,CAAK,CAAC,OAAO,EAAE,EAAE;QAC1C,IAAA,iBAAK,EAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,UAAU,GAAG,EAAE,IAAI;YAChE,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACjB,CAAC;AAZD,0BAYC","sourcesContent":["import fs from \"fs/promises\";\nimport path from \"path\";\nimport { parse } from \"csv-parse\";\n\nexport async function readCsv(file: string): Promise<[]> {\n  const inputPath = path.join(__dirname, \"..\", \"..\", \"data\", file);\n\n  const fileData = await fs.readFile(inputPath);\n\n  const promise = new Promise<[]>((resolve) => {\n    parse(fileData, { columns: true, trim: true }, function (err, rows) {\n      resolve(rows);\n    });\n  });\n\n  return promise;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"304281091d3b3f33b099b04fd87b551fca4e5cfb","contentHash":"7ce879ec8ba2bda580b6f26981c97f52039153b255a0705fdc9b0a43aa363d6b"},"/Users/mirekrousal/flick/brokers-test/src/repo/normalised-data-repo.ts":{"path":"/Users/mirekrousal/flick/brokers-test/src/repo/normalised-data-repo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":17}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":22}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":31}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":83}},"6":{"start":{"line":17,"column":49},"end":{"line":17,"column":70}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":44}},"8":{"start":{"line":24,"column":31},"end":{"line":33,"column":14}},"9":{"start":{"line":25,"column":29},"end":{"line":25,"column":101}},"10":{"start":{"line":28,"column":29},"end":{"line":28,"column":56}},"11":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"12":{"start":{"line":30,"column":16},"end":{"line":30,"column":54}},"13":{"start":{"line":32,"column":12},"end":{"line":32,"column":31}},"14":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"15":{"start":{"line":37,"column":8},"end":{"line":37,"column":67}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":110}},"17":{"start":{"line":41,"column":85},"end":{"line":41,"column":105}},"18":{"start":{"line":46,"column":8},"end":{"line":46,"column":99}},"19":{"start":{"line":46,"column":81},"end":{"line":46,"column":91}},"20":{"start":{"line":49,"column":0},"end":{"line":49,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":22},"end":{"line":10,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":23},"end":{"line":15,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":25},"end":{"line":18,"column":5}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":40},"end":{"line":17,"column":41}},"loc":{"start":{"line":17,"column":49},"end":{"line":17,"column":70}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":42},"end":{"line":35,"column":5}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":25,"column":20},"end":{"line":25,"column":21}},"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":101}},"line":25},"6":{"name":"(anonymous_6)","decl":{"start":{"line":26,"column":20},"end":{"line":26,"column":21}},"loc":{"start":{"line":26,"column":46},"end":{"line":33,"column":9}},"line":26},"7":{"name":"(anonymous_7)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":54},"end":{"line":38,"column":5}},"line":36},"8":{"name":"(anonymous_8)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":50},"end":{"line":42,"column":5}},"line":40},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":67},"end":{"line":41,"column":68}},"loc":{"start":{"line":41,"column":85},"end":{"line":41,"column":105}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":50},"end":{"line":47,"column":5}},"line":45},"11":{"name":"(anonymous_11)","decl":{"start":{"line":46,"column":72},"end":{"line":46,"column":73}},"loc":{"start":{"line":46,"column":81},"end":{"line":46,"column":91}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":15},"end":{"line":17,"column":82}},"type":"cond-expr","locations":[{"start":{"line":17,"column":24},"end":{"line":17,"column":71}},{"start":{"line":17,"column":74},"end":{"line":17,"column":82}}],"line":17},"1":{"loc":{"start":{"line":20,"column":20},"end":{"line":20,"column":43}},"type":"binary-expr","locations":[{"start":{"line":20,"column":20},"end":{"line":20,"column":29}},{"start":{"line":20,"column":33},"end":{"line":20,"column":43}}],"line":20},"2":{"loc":{"start":{"line":25,"column":29},"end":{"line":25,"column":101}},"type":"binary-expr","locations":[{"start":{"line":25,"column":29},"end":{"line":25,"column":64}},{"start":{"line":25,"column":68},"end":{"line":25,"column":101}}],"line":25},"3":{"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},{"start":{"line":29,"column":12},"end":{"line":31,"column":13}}],"line":29},"4":{"loc":{"start":{"line":29,"column":16},"end":{"line":29,"column":286}},"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":144}},{"start":{"line":29,"column":149},"end":{"line":29,"column":280}},{"start":{"line":29,"column":284},"end":{"line":29,"column":286}}],"line":29},"5":{"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":144}},"type":"cond-expr","locations":[{"start":{"line":29,"column":127},"end":{"line":29,"column":133}},{"start":{"line":29,"column":136},"end":{"line":29,"column":144}}],"line":29},"6":{"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":124}},"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":107}},{"start":{"line":29,"column":111},"end":{"line":29,"column":124}}],"line":29},"7":{"loc":{"start":{"line":29,"column":23},"end":{"line":29,"column":97}},"type":"cond-expr","locations":[{"start":{"line":29,"column":66},"end":{"line":29,"column":72}},{"start":{"line":29,"column":75},"end":{"line":29,"column":97}}],"line":29},"8":{"loc":{"start":{"line":29,"column":23},"end":{"line":29,"column":63}},"type":"binary-expr","locations":[{"start":{"line":29,"column":23},"end":{"line":29,"column":40}},{"start":{"line":29,"column":44},"end":{"line":29,"column":63}}],"line":29},"9":{"loc":{"start":{"line":29,"column":155},"end":{"line":29,"column":279}},"type":"cond-expr","locations":[{"start":{"line":29,"column":262},"end":{"line":29,"column":268}},{"start":{"line":29,"column":271},"end":{"line":29,"column":279}}],"line":29},"10":{"loc":{"start":{"line":29,"column":155},"end":{"line":29,"column":259}},"type":"binary-expr","locations":[{"start":{"line":29,"column":155},"end":{"line":29,"column":242}},{"start":{"line":29,"column":246},"end":{"line":29,"column":259}}],"line":29},"11":{"loc":{"start":{"line":29,"column":161},"end":{"line":29,"column":232}},"type":"cond-expr","locations":[{"start":{"line":29,"column":202},"end":{"line":29,"column":208}},{"start":{"line":29,"column":211},"end":{"line":29,"column":232}}],"line":29},"12":{"loc":{"start":{"line":29,"column":161},"end":{"line":29,"column":199}},"type":"binary-expr","locations":[{"start":{"line":29,"column":161},"end":{"line":29,"column":177}},{"start":{"line":29,"column":181},"end":{"line":29,"column":199}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":2,"4":3,"5":10,"6":12,"7":10,"8":10,"9":24,"10":16,"11":16,"12":16,"13":16,"14":10,"15":1,"16":4,"17":6,"18":5,"19":6,"20":1},"f":{"0":2,"1":3,"2":10,"3":12,"4":10,"5":24,"6":16,"7":1,"8":4,"9":6,"10":5,"11":6},"b":{"0":[4,6],"1":[10,8],"2":[24,20],"3":[16,0],"4":[16,14,0],"5":[14,2],"6":[16,16],"7":[14,2],"8":[16,16],"9":[0,14],"10":[14,14],"11":[0,14],"12":[14,14]},"inputSourceMap":{"version":3,"file":"/Users/mirekrousal/flick/brokers-test/src/repo/normalised-data-repo.ts","sources":["/Users/mirekrousal/flick/brokers-test/src/repo/normalised-data-repo.ts"],"names":[],"mappings":";;;AAEA,IAAI,QAAQ,GAAsB,EAAE,CAAC;AAErC,4HAA4H;AAC5H,iBAAiB;AACjB,MAAM,kBAAkB;IACf,KAAK,CAAC,SAAS;QACpB,QAAQ,GAAG,EAAE,CAAC;IAChB,CAAC;IAED,2GAA2G;IAC3G,sHAAsH;IAC/G,KAAK,CAAC,MAAM,CAAC,IAAuB;QACzC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,MAAe;QACjC,OAAO,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC7E,CAAC;IAEM,KAAK,CAAC,YAAY,CAAC,MAAe,EAAE,SAAkB;QAC3D,SAAS,GAAG,SAAS,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;QACpC,oJAAoJ;QACpJ,6JAA6J;QAC7J,oGAAoG;QACpG,MAAM,cAAc,GAAG,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aAC/C,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,kBAAkB,IAAI,SAAS,IAAI,GAAG,CAAC,gBAAgB,IAAI,SAAS,CAAC,CAAC,gBAAgB;aAC1G,MAAM,CAAC,CAAC,WAAe,EAAE,OAAwB,EAAE,EAAE;;YACpD,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAoB,CAAC;YAChE,IAAI,CAAA,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,aAAa,0CAAE,KAAK,KAAI,CAAC,CAAC,IAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,aAAa,0CAAE,KAAK,CAAA,IAAI,CAAC,CAAC,EAAE;gBAC9E,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;aACvC;YACD,OAAO,WAAW,CAAC;QACrB,CAAC,EAAE,EAAE,CAAC,CAAC;QAET,OAAO,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC;IAEM,KAAK,CAAC,wBAAwB,CAAC,MAAe,EAAE,SAAkB;QACvE,OAAO,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC;IAC7D,CAAC;IAED,mHAAmH;IAC5G,KAAK,CAAC,oBAAoB,CAAC,MAAe,EAAE,SAAkB;QACnE,OAAO,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CACxD,CAAC,GAAW,EAAE,OAAwB,EAAE,EAAE,CAAC,GAAG,GAAG,OAAO,CAAC,MAAM,EAC/D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,8HAA8H;IAC9H,4GAA4G;IACrG,KAAK,CAAC,oBAAoB,CAAC,MAAe,EAAE,SAAkB;QACnE,OAAO,IAAI,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;IAC7F,CAAC;CACF;AAEY,QAAA,IAAI,GAAG,IAAI,kBAAkB,EAAE,CAAC","sourcesContent":["import { InsuranceRecord } from \"../types/normalised\";\n\nlet DATABASE: InsuranceRecord[] = [];\n\n// Normally this would be database some sort and would need to be async -> making sure we would not need to change code once\n// DB was decided\nclass NormalisedDataRepo {\n  public async deleteAll() {\n    DATABASE = [];\n  }\n\n  // Insert should handle duplicates, in actual database would have compounded index of policy and event type\n  // as seems same policy can come from two different brokers after update / renewal - like for example POL044 or REF053\n  public async insert(rows: InsuranceRecord[]) {\n    DATABASE.push(...rows);\n  }\n\n  public async getAll(source?: string) {\n    return source ? DATABASE.filter((row) => row.source === source) : DATABASE;\n  }\n\n  public async getAllLatest(source?: string, timestamp?: number): Promise<InsuranceRecord[]> {\n    timestamp = timestamp || Date.now();\n    // There needs to be logic what update is consider the latest, from the data is unclear, but would assume some logic around the Contract Event field\n    // and / or when data were received. Could there be potential race condition in that case, like example if broker1 closes contract but sends data once a week\n    // but client goes next day to broker2 who gives them better quote but broker2 send data once a day?\n    const uniquePolicies = (await this.getAll(source))\n      .filter((row) => row.startDateTimestamp <= timestamp && row.endDateTimestamp >= timestamp) // filter active\n      .reduce((reducedData: {}, current: InsuranceRecord) => {\n        const previous = reducedData[current.policy] as InsuranceRecord;\n        if (previous?.businessEvent?.order || -1 < current?.businessEvent?.order || -1) {\n          reducedData[current.policy] = current;\n        }\n        return reducedData;\n      }, {});\n\n    return Object.values(uniquePolicies);\n  }\n\n  public async getTotalNumberOfPolicies(source?: string, timestamp?: number): Promise<number> {\n    return (await this.getAllLatest(source, timestamp)).length;\n  }\n\n  // Question: for total insured value per source, how updated polices are counted if they done via different broker?\n  public async getTotalInsuredValue(source?: string, timestamp?: number): Promise<number> {\n    return (await this.getAllLatest(source, timestamp)).reduce(\n      (sum: number, current: InsuranceRecord) => sum + current.amount,\n      0\n    );\n  }\n\n  // Question: for total insured customers number per source, how updated polices are counted if they done via different broker?\n  // What about admin fees? What's the policy about updates, do both brokers get the fee or only the last one?\n  public async getTotalNumCustomers(source?: string, timestamp?: number): Promise<number> {\n    return new Set((await this.getAllLatest(source, timestamp)).map((row) => row.client)).size;\n  }\n}\n\nexport const repo = new NormalisedDataRepo();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9d17c092be4fe0fed04467c82add47422795eb31","contentHash":"1c93b7c68c5703e40688169e00f31975a2deeed9cecf6da28200d411b79a34da"},"/Users/mirekrousal/flick/brokers-test/src/repo/failed-data-repo.ts":{"path":"/Users/mirekrousal/flick/brokers-test/src/repo/failed-data-repo.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":19}},"3":{"start":{"line":9,"column":8},"end":{"line":14,"column":11}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":24}},"5":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":37},"end":{"line":15,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":19},"end":{"line":18,"column":5}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1},"f":{"0":1,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mirekrousal/flick/brokers-test/src/repo/failed-data-repo.ts","sources":["/Users/mirekrousal/flick/brokers-test/src/repo/failed-data-repo.ts"],"names":[],"mappings":";;;AAOA,MAAM,QAAQ,GAAkB,EAAE,CAAC;AAEnC,MAAM,cAAc;IAClB,4HAA4H;IAC5H,iBAAiB;IAEV,KAAK,CAAC,MAAM,CAAC,GAAO,EAAE,KAAa,EAAE,MAAc;QACxD,QAAQ,CAAC,IAAI,CAAC;YACZ,IAAI,EAAE,GAAG;YACT,KAAK;YACL,MAAM;YACN,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;SACtB,CAAC,CAAC;IACL,CAAC;IACM,KAAK,CAAC,MAAM;QACjB,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAEY,QAAA,IAAI,GAAG,IAAI,cAAc,EAAE,CAAC","sourcesContent":["interface ErroredData {\n  data: {};\n  error: string;\n  source: string;\n  timestamp: number;\n}\n\nconst DATABASE: ErroredData[] = [];\n\nclass FailedDataRepo {\n  // Normally this would be database some sort and would need to be async -> making sure we would not need to change code once\n  // DB was decided\n\n  public async insert(row: {}, error: string, source: string) {\n    DATABASE.push({\n      data: row,\n      error,\n      source,\n      timestamp: Date.now()\n    });\n  }\n  public async getAll() {\n    return DATABASE;\n  }\n}\n\nexport const repo = new FailedDataRepo();\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"860e02c27d0f7425c1bb73f1aea00a7fef7de36d","contentHash":"3840186d4423f817afd8e49e65be27169e8d6b998a6e6cefd53b328f26ba0e19"},"/Users/mirekrousal/flick/brokers-test/src/utils/parse-utils.ts":{"path":"/Users/mirekrousal/flick/brokers-test/src/utils/parse-utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":86}},"2":{"start":{"line":6,"column":22},"end":{"line":6,"column":55}},"3":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"5":{"start":{"line":10,"column":4},"end":{"line":10,"column":21}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":30}},"7":{"start":{"line":14,"column":16},"end":{"line":14,"column":29}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":59}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"11":{"start":{"line":20,"column":0},"end":{"line":20,"column":52}},"12":{"start":{"line":22,"column":4},"end":{"line":31,"column":5}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":45}},"14":{"start":{"line":26,"column":12},"end":{"line":26,"column":49}},"15":{"start":{"line":28,"column":12},"end":{"line":28,"column":49}},"16":{"start":{"line":30,"column":12},"end":{"line":30,"column":48}},"17":{"start":{"line":33,"column":0},"end":{"line":33,"column":46}}},"fnMap":{"0":{"name":"parseDate","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":18}},"loc":{"start":{"line":5,"column":24},"end":{"line":11,"column":1}},"line":5},"1":{"name":"parseToNumberOrThrow","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":29}},"loc":{"start":{"line":13,"column":35},"end":{"line":19,"column":1}},"line":13},"2":{"name":"matchBusinessEven","decl":{"start":{"line":21,"column":9},"end":{"line":21,"column":26}},"loc":{"start":{"line":21,"column":34},"end":{"line":32,"column":1}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{"line":7,"column":4},"end":{"line":9,"column":5}}],"line":7},"1":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},{"start":{"line":15,"column":4},"end":{"line":17,"column":5}}],"line":15},"2":{"loc":{"start":{"line":22,"column":4},"end":{"line":31,"column":5}},"type":"switch","locations":[{"start":{"line":23,"column":8},"end":{"line":24,"column":45}},{"start":{"line":25,"column":8},"end":{"line":26,"column":49}},{"start":{"line":27,"column":8},"end":{"line":28,"column":49}},{"start":{"line":29,"column":8},"end":{"line":30,"column":48}}],"line":22}},"s":{"0":1,"1":1,"2":5,"3":5,"4":2,"5":3,"6":1,"7":6,"8":6,"9":1,"10":5,"11":1,"12":1,"13":0,"14":0,"15":1,"16":0,"17":1},"f":{"0":5,"1":6,"2":1},"b":{"0":[2,3],"1":[1,5],"2":[0,0,1,0]},"inputSourceMap":{"version":3,"file":"/Users/mirekrousal/flick/brokers-test/src/utils/parse-utils.ts","sources":["/Users/mirekrousal/flick/brokers-test/src/utils/parse-utils.ts"],"names":[],"mappings":";;;AAGA,uDAAuD;AACvD,SAAgB,SAAS,CAAC,GAAW;IACnC,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAEpD,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE;QACpB,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,6CAA6C,CAAC,CAAC;KACvE;IAED,OAAO,SAAS,CAAC;AACnB,CAAC;AARD,8BAQC;AAED,SAAgB,oBAAoB,CAAC,GAAW;IAC9C,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IAE1B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,0BAA0B,CAAC,CAAC;KACpD;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AARD,oDAQC;AAED,SAAgB,iBAAiB,CAAC,KAAa;IAC7C,QAAQ,KAAK,EAAE;QACb,KAAK,cAAc;YACjB,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QACnC,KAAK,gBAAgB;YACnB,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QACvC,KAAK,SAAS;YACZ,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;QACvC,KAAK,eAAe;YAClB,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;KACvC;AACH,CAAC;AAXD,8CAWC","sourcesContent":["import { Number } from \"aws-sdk/clients/iot\";\nimport { BusinessEvent } from \"../types/normalised\";\n\n// `Docs: at the moment supports only dd/mm/yyyy format\nexport function parseDate(str: string): Number {\n  const timestamp = Date.parse(str.replace(\"/\", \"-\"));\n\n  if (isNaN(timestamp)) {\n    throw new Error(`\"${str}\" is not a valid date in format dd/mm/yyyy.`);\n  }\n\n  return timestamp;\n}\n\nexport function parseToNumberOrThrow(str: string) {\n  const num = parseInt(str);\n\n  if (isNaN(num)) {\n    throw new Error(`\"${str}\" is not a valid number.`);\n  }\n\n  return num;\n}\n\nexport function matchBusinessEven(event: string): BusinessEvent {\n  switch (event) {\n    case \"New Business\":\n      return { type: \"New\", order: 1 };\n    case \"Policy Renewal\":\n      return { type: \"Renewal\", order: 2 };\n    case \"Renewal\":\n      return { type: \"Renewal\", order: 2 };\n    case \"Policy Update\":\n      return { type: \"Update\", order: 2 };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"48f42b22f83bee4c4bfccd93a76cabef33b87052","contentHash":"8727ddfbbf75e62ab846e6f9d85838feecee1b0d087dc779a3d206a9626bf37d"},"/Users/mirekrousal/flick/brokers-test/src/utils/consts.ts":{"path":"/Users/mirekrousal/flick/brokers-test/src/utils/consts.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":57}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/mirekrousal/flick/brokers-test/src/utils/consts.ts","sources":["/Users/mirekrousal/flick/brokers-test/src/utils/consts.ts"],"names":[],"mappings":";;;AAAa,QAAA,cAAc,GAAG,SAAS,CAAA;AAC1B,QAAA,cAAc,GAAG,SAAS,CAAA","sourcesContent":["export const BROKER1_SOURCE = \"BROKER1\"\nexport const BROKER2_SOURCE = \"BROKER2\"\n\nexport type KNOWN_BROKERS = \"BROKER1\" | \"BROKER2\";"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b069144c2b8e80770cd55df368029ab816d1fa0c","contentHash":"1dae938d3764fe0f759debe85d64f8260819a0030d75dddbe28882fc8161adfd"},"/Users/mirekrousal/flick/brokers-test/src/controllers/insights.ts":{"path":"/Users/mirekrousal/flick/brokers-test/src/controllers/insights.ts","statementMap":{"0":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":28}},"2":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"3":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"4":{"start":{"line":4,"column":79},"end":{"line":4,"column":131}},"5":{"start":{"line":5,"column":9},"end":{"line":5,"column":150}},"6":{"start":{"line":5,"column":22},"end":{"line":5,"column":43}},"7":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"8":{"start":{"line":5,"column":81},"end":{"line":5,"column":150}},"9":{"start":{"line":6,"column":4},"end":{"line":6,"column":66}},"10":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"11":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"12":{"start":{"line":9,"column":79},"end":{"line":9,"column":109}},"13":{"start":{"line":11,"column":14},"end":{"line":13,"column":1}},"14":{"start":{"line":12,"column":4},"end":{"line":12,"column":73}},"15":{"start":{"line":12,"column":36},"end":{"line":12,"column":71}},"16":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"17":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"18":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"19":{"start":{"line":17,"column":31},"end":{"line":17,"column":70}},"20":{"start":{"line":18,"column":25},"end":{"line":35,"column":1}},"21":{"start":{"line":20,"column":8},"end":{"line":20,"column":83}},"22":{"start":{"line":23,"column":8},"end":{"line":25,"column":10}},"23":{"start":{"line":28,"column":8},"end":{"line":30,"column":10}},"24":{"start":{"line":33,"column":8},"end":{"line":33,"column":108}},"25":{"start":{"line":36,"column":0},"end":{"line":43,"column":49}},"26":{"start":{"line":44,"column":0},"end":{"line":51,"column":67}},"27":{"start":{"line":52,"column":0},"end":{"line":59,"column":63}},"28":{"start":{"line":60,"column":0},"end":{"line":67,"column":63}},"29":{"start":{"line":68,"column":0},"end":{"line":71,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":46},"end":{"line":2,"column":47}},"loc":{"start":{"line":2,"column":87},"end":{"line":7,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":46},"end":{"line":8,"column":47}},"loc":{"start":{"line":8,"column":62},"end":{"line":10,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":40},"end":{"line":11,"column":41}},"loc":{"start":{"line":11,"column":73},"end":{"line":13,"column":1}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":11},"end":{"line":12,"column":12}},"loc":{"start":{"line":12,"column":34},"end":{"line":12,"column":73}},"line":12},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":44},"end":{"line":21,"column":5}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":62},"end":{"line":26,"column":5}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":58},"end":{"line":31,"column":5}},"line":27},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":58},"end":{"line":34,"column":5}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":18},"end":{"line":2,"column":22}},{"start":{"line":2,"column":26},"end":{"line":2,"column":41}},{"start":{"line":2,"column":46},"end":{"line":7,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":42},"end":{"line":3,"column":48}},{"start":{"line":3,"column":51},"end":{"line":3,"column":125}}],"line":3},"2":{"loc":{"start":{"line":3,"column":51},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":67},"end":{"line":3,"column":118}},{"start":{"line":3,"column":121},"end":{"line":3,"column":125}}],"line":3},"3":{"loc":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},{"start":{"line":4,"column":4},"end":{"line":5,"column":150}}],"line":4},"4":{"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":77}},"type":"binary-expr","locations":[{"start":{"line":4,"column":8},"end":{"line":4,"column":35}},{"start":{"line":4,"column":39},"end":{"line":4,"column":77}}],"line":4},"5":{"loc":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},{"start":{"line":5,"column":58},"end":{"line":5,"column":150}}],"line":5},"6":{"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":149}},"type":"binary-expr","locations":[{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},{"start":{"line":5,"column":148},"end":{"line":5,"column":149}}],"line":5},"7":{"loc":{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":94},"end":{"line":5,"column":98}},{"start":{"line":5,"column":101},"end":{"line":5,"column":143}}],"line":5},"8":{"loc":{"start":{"line":5,"column":101},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":109},"end":{"line":5,"column":126}},{"start":{"line":5,"column":129},"end":{"line":5,"column":143}}],"line":5},"9":{"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":62}},"type":"binary-expr","locations":[{"start":{"line":6,"column":11},"end":{"line":6,"column":16}},{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":62}}],"line":6},"10":{"loc":{"start":{"line":8,"column":17},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":8,"column":18},"end":{"line":8,"column":22}},{"start":{"line":8,"column":26},"end":{"line":8,"column":41}},{"start":{"line":8,"column":46},"end":{"line":10,"column":1}}],"line":8},"11":{"loc":{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":109}},{"start":{"line":9,"column":4},"end":{"line":9,"column":109}}],"line":9},"12":{"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":77}},"type":"binary-expr","locations":[{"start":{"line":9,"column":8},"end":{"line":9,"column":35}},{"start":{"line":9,"column":39},"end":{"line":9,"column":77}}],"line":9},"13":{"loc":{"start":{"line":11,"column":14},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":19}},{"start":{"line":11,"column":23},"end":{"line":11,"column":35}},{"start":{"line":11,"column":40},"end":{"line":13,"column":1}}],"line":11}},"s":{"0":1,"1":5,"2":5,"3":5,"4":5,"5":0,"6":0,"7":0,"8":0,"9":5,"10":1,"11":12,"12":12,"13":1,"14":8,"15":8,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":2,"25":1,"26":1,"27":1,"28":1,"29":1},"f":{"0":5,"1":12,"2":8,"3":8,"4":0,"5":0,"6":1,"7":2},"b":{"0":[1,1,1],"1":[1,4],"2":[4,0],"3":[5,0],"4":[5,5],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[5,4,4],"10":[1,1,1],"11":[12,0],"12":[12,12],"13":[1,1,1]},"inputSourceMap":{"version":3,"file":"/Users/mirekrousal/flick/brokers-test/src/controllers/insights.ts","sources":["/Users/mirekrousal/flick/brokers-test/src/controllers/insights.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,+BAA+C;AAE/C,uEAAoD;AAS7C,IAAM,kBAAkB,gCAAxB,MAAM,kBAAkB;IAEhB,AAAN,KAAK,CAAC,MAAM,CAAU,MAAsB,EAAW,iBAA0B;QACtF,OAAO,2BAAI,CAAC,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IACtD,CAAC;IAGY,AAAN,KAAK,CAAC,wBAAwB,CAAU,MAAsB,EAAW,iBAA0B;QACxG,OAAO;YACL,KAAK,EAAE,MAAM,2BAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,iBAAiB,CAAC;SACtE,CAAC;IACJ,CAAC;IAGY,AAAN,KAAK,CAAC,oBAAoB,CAAU,MAAsB,EAAW,iBAA0B;QACpG,OAAO;YACL,KAAK,EAAE,MAAM,2BAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,iBAAiB,CAAC;SAClE,CAAC;IACJ,CAAC;IAGY,AAAN,KAAK,CAAC,oBAAoB,CAAU,MAAsB,EAAW,iBAA0B;QACpG,OAAO,EAAE,KAAK,EAAE,MAAM,2BAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,iBAAiB,CAAC,EAAE,CAAC;IAC/E,CAAC;CACF,CAAA;AAtBc;IADZ,IAAA,UAAG,GAAE;IACe,WAAA,IAAA,YAAK,GAAE,CAAA;IAA0B,WAAA,IAAA,YAAK,GAAE,CAAA;;;;gDAE5D;AAGY;IADZ,IAAA,UAAG,EAAC,2BAA2B,CAAC;IACM,WAAA,IAAA,YAAK,GAAE,CAAA;IAA0B,WAAA,IAAA,YAAK,GAAE,CAAA;;;;kEAI9E;AAGY;IADZ,IAAA,UAAG,EAAC,sBAAsB,CAAC;IACO,WAAA,IAAA,YAAK,GAAE,CAAA;IAA0B,WAAA,IAAA,YAAK,GAAE,CAAA;;;;8DAI1E;AAGY;IADZ,IAAA,UAAG,EAAC,4BAA4B,CAAC;IACC,WAAA,IAAA,YAAK,GAAE,CAAA;IAA0B,WAAA,IAAA,YAAK,GAAE,CAAA;;;;8DAE1E;6BAvBU,kBAAkB;IAF9B,IAAA,YAAK,EAAC,sBAAsB,CAAC;IAC7B,IAAA,WAAI,EAAC,UAAU,CAAC;GACJ,kBAAkB,CAwB9B","sourcesContent":["import { Get, Query, Route, Tags } from \"tsoa\";\nimport { InsuranceRecord } from \"../types/normalised\";\nimport { repo } from \"../repo/normalised-data-repo\";\nimport { KNOWN_BROKERS } from \"../utils/consts\";\n\ninterface NumericResponse {\n  value: number;\n}\n\n@Route(`/broker-api/insights`)\n@Tags(\"insights\")\nexport class InsightsController {\n  @Get()\n  public async getAll(@Query() source?: KNOWN_BROKERS, @Query() activeAtTimestamp?: number): Promise<InsuranceRecord[]> {\n    return repo.getAllLatest(source, activeAtTimestamp);\n  }\n\n  @Get(\"/total-number-of-policies\")\n  public async getTotalNumberOfPolicies(@Query() source?: KNOWN_BROKERS, @Query() activeAtTimestamp?: number): Promise<NumericResponse> {\n    return {\n      value: await repo.getTotalNumberOfPolicies(source, activeAtTimestamp),\n    };\n  }\n\n  @Get(\"/total-insured-value\")\n  public async getTotalInsuredValue(@Query() source?: KNOWN_BROKERS, @Query() activeAtTimestamp?: number): Promise<NumericResponse> {\n    return {\n      value: await repo.getTotalInsuredValue(source, activeAtTimestamp),\n    };\n  }\n\n  @Get(\"/total-number-of-customers\")\n  public async getTotalNumCustomers(@Query() source?: KNOWN_BROKERS, @Query() activeAtTimestamp?: number): Promise<NumericResponse> {\n    return { value: await repo.getTotalNumCustomers(source, activeAtTimestamp) };\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de31d7294e4ac62ff1a6fd57830b9f7d546eeac0","contentHash":"2357f06022fb3dda6c58aff29656cb65ec35f5a6902b3e29bec5e7c0a9e51728"}}